─────────────────────────────────────────────────────────────
Lab: Families of Functions
To advance the lab, select menu Help|Studio|Advance or the
corresponding shortcut.


── (1 of 21) INTRODUCTION ───────────────────────────────────
The adoption of the notations

    2      3
   x  and x

for the square and the cube functions united these two
monadic functions in a single dyadic "power" function.
Moreover, the notation suggested fruitful extensions from the
exponents 2 and 3 to negative, fractional, and even complex,
numbers.

Adopting De Morgans symbol ^ for the power, we can bring the
expression for powers to the form used for other dyadic
functions, as in x+3 and x-3 and x*3. Thus:
)
   5^2
25
   5^3
125
   5^2 3 0.5
25 125 2.23607
   
   (5^2)*(5^3)
3125
   5^5
3125
   
   5^_3
0.008
   (5^_3)*(5^3)
1
   

── (2 of 21) INTRODUCTION (ctd) ─────────────────────────────

As illustrated above, the power function unites a variety of
monadic functions in a single family, providing insight into
relations among the family members, as well as economy of
notation.

In what follows, we will define further families based on the
power function, including polynomials, rationals, rising and
falling factorial functions, hypergeometrics, the
exponential, and circular and hyperbolic sines and cosines.

Further information on any notation used may  be obtained by
pressing the F1 key to display the vocabulary, and using the
mouse to click on the desired item.

For example, look up the function ^ used in this section, and
the function p. and the operator & to be used in subsequent
sections.
)

── (3 of 21) POLYNOMIALS ────────────────────────────────────

                2     3              3 The functions 3x  + 2x
and 3 + 2x + x  are examples of polynomials, which are united
in a single family under the dyadic function p. as
illustrated below:
)
   x=: 2
   
   (3*x^2)+(2*x^3)
28
   
   0 0 3 2 p. x
28
   
   3+(2*x)+(x^3)
15
   
   3 2 0 1 p. x
15

── (4 of 21) OPERATORS ──────────────────────────────────────

An operator applies to verbs and nouns, i.e. functions and
variables, to produce a function. In what follows, we will
use operators to define new families

We begin with some simple examples of operators:
)
   f=: 0 0 3 2 & p.   NB. &(And or With) bonds the argument with p.
   
   f x
28
   
   g=: 3 2 0 1 & p.
   
   g x
15
   
   f g x
7425
   
   h=: f@g          NB. @ (Atop) applies f atop the result of g
   
   h x
7425

── (5 of 21) OPERATORS (ctd) ────────────────────────────────

Do not hesitate to enter any experiment that occurs to you --
the worst that can occur is an error message of some kind.
However, do not waste too much time on expressions whose
results you do not understand. It is better to return to them
after gaining more familiarity with the language.
)

── (6 of 21) OPERATORS (ctd) ────────────────────────────────

Try some of the following experiments concerning the
production of multiplication tables, and return to them with
new functions encountered in later sections, such as the
rising factorial rf=: ^!.1. Thus:
)
   i.5
0 1 2 3 4
   
   2 3 5 7 */ i.5       NB. A multiplication table
0 2  4  6  8
0 3  6  9 12
0 5 10 15 20
0 7 14 21 28
   
   2 3 5 7 *table i.5   NB. Bordered by args for easy reading
┌─┬────────────┐
│*│0 1  2  3  4│
├─┼────────────┤
│2│0 2  4  6  8│
│3│0 3  6  9 12│
│5│0 5 10 15 20│
│7│0 7 14 21 28│
└─┴────────────┘
   
   (i. */ i.) 5
0 0 0  0  0
0 1 2  3  4
0 2 4  6  8
0 3 6  9 12
0 4 8 12 16
   
   */~@i. 5
0 0 0  0  0
0 1 2  3  4
0 2 4  6  8
0 3 6  9 12
0 4 8 12 16

── (7 of 21) EXPONENTIAL FUNCTION ───────────────────────────

.               x The expression e  is commonly used to
denote the exponential function. As suggested by the
notation, the result is a quantity e raised to the power of
the argument x

The quantity e is called the number of Euler, and is denoted
here by 1x1 . Thus:
)
   e=: 1x1
   
   e
2.71828
   
   i=: 0 1 2 3 4 5 6
   
   e^i
1 2.71828 7.38906 20.0855 54.5982 148.413 403.429
   
   exp=: e&^
   
   exp i
1 2.71828 7.38906 20.0855 54.5982 148.413 403.429

── (8 of 21) EXPONENTIAL FUNCTION (ctd) ─────────────────────

The symbol ^ has been used thus far to denote a function of
two arguments. Used monadically (with only one argument) it
denotes the function e&^, that is, the exponential. Thus:
)
   ^ i
1 2.71828 7.38906 20.0855 54.5982 148.413 403.429

── (9 of 21) EXPONENTIAL FUNCTION (ctd) ─────────────────────

The exponential will now be used to generate a family of
functions that includes the familiar sine and cosine, as well
as the less familiar hyperbolic sine and hyperbolic cosine.

To obtain the hyperbolics we will employ the odd and even
operators; to obtain the trigonometric functions we will
apply the hyperbolics to complex arguments.
)

── (10 of 21) EVEN AND ODD PARTS ────────────────────────────

The expression f@- applies f atop negation, and the result of
f@- x is therefore the result of applying f to the negative
of x

The function g=: f + f@- is therefore an "even" function such
that g x equals g -x Graphically, this implies that g is
"reflected in the vertical axis". For example:
)
   f=: 3 1 4 2 5 & p.
   
   g=: f + f@-
   
   i=: 0 1 2 3 4 5 6
   
   g i
6 24 198 888 2694 6456 13254
   
   g -i
6 24 198 888 2694 6456 13254

── (11 of 21) EVEN AND ODD PARTS (ctd) ──────────────────────

Similarly, the function h=: f - f@- is odd, and its graph is
reflected in the origin.

The even and odd parts of f are defined to be one-half of the
functions g and h, so that their sum gives the original
function. The operators even and odd=, defined below, give
these even and odd parts.
)
   even=: {{ u -:@:+ u@:- }}
   
   odd=: {{ u -:@:- u@:- }}
   
   
   ep=: f even
   
   op=: f odd
   
   ep i
3 12 99 444 1347 3228 6627
   
   op i
0 3 18 57 132 255 438
   
   (ep+op) i
3 15 117 501 1479 3483 7065
   
   f i
3 15 117 501 1479 3483 7065

── (12 of 21) EVEN AND ODD PARTS (ctd) ──────────────────────

The even and odd parts of the exponential function are the
hyperbolic cosine and hyperbolic sine, respectively. Thus:
)
   cosh=: ^ even
   
   sinh=: ^ odd
   
   y=: 0 1 2 3 4
   
   cosh y
1 1.54308 3.7622 10.0677 27.3082
   
   sinh y
0 1.1752 3.62686 10.0179 27.2899
   
   ((cosh y)^2) - ((sinh y)^2)
1 1 1 1 1

── (13 of 21) COS AND SIN ───────────────────────────────────

The ordinary cosine and sine may be expressed by applying the
corresponding hyperbolic to an imaginary argument.

The expression ix is commonly used to denote the "imaginary"
value obtained by multiplying x by the square root of minus
one i.e. denoted here by 0j1. We will instead use j.x, where
j. denotes a function that multiplies its argument by the
square root of minus one. For example:
)
   y=: 0 1 2 3 4 5
   
   j. y
0 0j1 0j2 0j3 0j4 0j5
   
   cos=: cosh@j.
   
   cos y
1 0.540302 _0.416147 _0.989992 _0.653644 0.283662
   
   sin=: sinh&.j.
   
   sin y
0 0.841471 0.909297 0.14112 _0.756802 _0.958924

── (14 of 21) COS AND SIN (ctd) ─────────────────────────────

It should be noted that although the cos function was defined
by cosh@j., the sin was defined by a  different operator &..
To appreciate the reason for this try applying sinh@j. to y,
and then use F1 to examine the definition of the "dual"
operator &..
)

── (15 of 21) STOPES ────────────────────────────────────────

The product */x+i.n will be called a "stope" because the n
factors x+i.n rise like the steps of a mine stope following a
sloping vein of ore. The corresponding function */@([+i.@])
is also called a "rising factorial function". For example:
)
   x=: 6
   n=: 4
   
   i.n
0 1 2 3
   
   x+i.n
6 7 8 9
   
   */x+i.n
3024
   
   rf=: */@([+i.@])
   
   x rf n
3024

── (16 of 21) STOPES (ctd) ──────────────────────────────────

A falling factorial may be defined analogously by multiplying
the integers i.n by _1; and the power function itself can be
obtained by multiplying by zero. Thus:
)
   */x+_1*i.n     NB. Falling factorial
360
   
   */x+1*i.n      NB. Rising factorial
3024
   
   */x+0*i.n      NB. Power function
1296

── (17 of 21) STOPES (ctd) ──────────────────────────────────

These definitions may be united in a single family by the
"fit" operator !. as illustrated below:
)
   rf=: ^!.1
   
   ff=: ^!._1
   
   po=: ^!.0
   
   x (rf,po,ff) n
3024 1296 360

── (18 of 21) STOPE POLYNOMIALS ─────────────────────────────

The fit operator can be similarly applied to the polynomial
function p. to produce polynomials based upon falling and
rising factorials as well as upon the power function. Thus:
)
   ffp=: p.!._1    NB. Falling factorial polynomial
   
   rfp=: p.!.1     NB. Rising factorial polynomial
   
   1 2 3 (ffp,p.,rfp) 5
71 86 101
   
   5 ff 0 1 2
1 5 20
   
   +/ 1 2 3 * 5 ff 0 1 2
71

── (19 of 21) RATIONAL FUNCTIONS ────────────────────────────

If f and g are polynomials, their quotient q=:f%g is a
rational function. For example:
)
   f=: 1 2 1&p.
   
   g=: 1 3 3 1&p.
   
   q=: f%g
   
   x=: 0 1 2 3 4 5 6
   
   q x
1 0.5 0.333333 0.25 0.2 0.166667 0.142857
   
   (g%f) x
1 2 3 4 5 6 7

── (20 of 21) HYPERGEOMETRICS ───────────────────────────────

The hypergeometric operator H. applies to lists to produce a
rational function whose limiting value, for a large number of
terms, may represent a wide variety of important functions.
For example:
)
   1 H. 1 i.6       NB. The exponential function
1 2.71828 7.38906 20.0855 54.5982 148.413

── (21 of 21) HYPERGEOMETRICS (ctd) ─────────────────────────

Although the hypergeometric function is a ratio of two
polynomials, the limbs of the ratio are normally expressed as
products over rising factorials, which are equivalent to
polynomials. For further details on the definition of the
operator H., use key F1 to display the vocabulary, and select
the appropriate item.

For further discussion of the hypergeometric see Section 15
of the National Bureau of Standards "Handbook of Mathematical
Functions", edited by Abramowitz and Stegun.
)

End of lab
   
