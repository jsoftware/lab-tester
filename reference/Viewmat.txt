─────────────────────────────────────────────────────────────
Lab: Viewmat
To advance the lab, select menu Help|Studio|Advance or the
corresponding shortcut.


── (1 of 20) Overview ───────────────────────────────────────
The viewmat utilities display tables of data graphically.
They are used in several of the labs.

There are three utilities:

  viewmat - view arbitrary table

  viewrgb - view table of RGB integers

  viewpng - view bitmap file

viewmat is the main utility, and is used by the other verbs.

This lab displays several viewmat windows. You can leave them
open and move them aside to view the lab text. To close them,
press Esc in the viewmat window.

To load, enter:
)
   load 'viewmat'
   

── (2 of 20) viewmat ────────────────────────────────────────
For example, here is some random binary data, and its viewmat
display.
)
   [a=: ?20 20$2
1 0 0 0 1 0 0 1 0 1 1 1 0 1 1 1 0 0 1 0
1 0 0 1 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 1
1 0 1 0 0 0 0 0 1 1 0 0 1 1 1 0 0 1 0 1
0 0 0 0 1 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1
0 1 1 1 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1
0 0 0 1 0 0 1 1 0 0 1 0 0 1 0 0 0 0 0 1
0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1
0 1 1 0 0 1 0 0 1 1 1 0 1 0 1 0 1 0 0 1
1 0 1 1 1 1 0 0 0 1 1 1 0 1 1 1 1 0 0 0
1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 1 1 0
0 0 1 0 0 1 1 0 1 1 1 0 1 1 0 0 0 0 1 0
1 0 1 0 1 0 0 1 1 0 0 1 0 1 1 0 1 0 1 0
1 0 1 1 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0
1 0 1 0 0 1 0 1 1 1 0 1 1 1 1 0 0 0 0 0
0 1 0 1 0 1 1 0 1 1 0 1 1 0 1 0 1 0 0 0
0 0 1 1 1 1 0 1 0 0 1 1 0 0 1 0 1 1 1 1
1 1 1 1 1 0 0 0 1 0 0 1 0 1 1 1 1 1 0 1
0 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 0 1 0 1
1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0
0 0 1 1 1 0 1 1 0 0 0 0 1 0 1 1 1 0 0 0
   
   viewmat a

── (3 of 20) viewmat (ctd) ──────────────────────────────────
viewmat typically scales the data to a reasonable sized
display. If you resize the window, it is redrawn. Try this
now.
)

── (4 of 20) viewmat (ctd) ──────────────────────────────────
Here it is used to visualize a multiplication table.
)
   */~ i:3
 9  6  3 0 _3 _6 _9
 6  4  2 0 _2 _4 _6
 3  2  1 0 _1 _2 _3
 0  0  0 0  0  0  0
_3 _2 _1 0  1  2  3
_6 _4 _2 0  2  4  6
_9 _6 _3 0  3  6  9
   
   viewmat */~ i:3

── (5 of 20) Color Palette ──────────────────────────────────
A color palette may be given in the left argument. These are
RGB triples, e.g. 255 0 0 is red.
)
   (255 0 0,:0 128 0) viewmat ?20 20$2

── (6 of 20) Color Palette (ctd) ────────────────────────────
This is a convenient way of displaying a color table.

For example, here are the 16 HTML primary colors.
)
   load 'color16'
   COLOR16
Aqua=:      0 255 255
Black=:     0   0   0
Blue=:      0   0 255
Fuchsia=: 255   0 255
Gray=:    128 128 128
Green=:     0 128   0
Lime=:      0 255   0
Maroon=:  128   0   0
Navy=:      0   0 128
Olive=:   128 128   0
Purple=:  128   0 128
Red=:     255   0   0
Silver=:  192 192 192
Teal=:      0 128 128
White=:   255 255 255
Yellow=:  255 255   0
   (". COLOR16) viewmat i. 16

── (7 of 20) Window Title ───────────────────────────────────
A boxed right argument is interpreted as:

  data ; window title

For example, here again are the 16 primary colors, this time
displayed in a 4 x 4 table, with a window title.
)
   (". COLOR16) viewmat (i. 4 4);'Primary Colors'

── (8 of 20) Vector Field ───────────────────────────────────
If the right argument is complex, it is displayed as a vector
field.

The color indicates the magnitude |z, and arrows indicate the
direction *z.
)

── (9 of 20) Vector Field (ctd) ─────────────────────────────
To experiment with this, define a table of complex numbers
centered on the origin, with the real part increasing from
left to right, and the complex part increasing from bottom to
top, as in the typical display of the complex plane.
)
   [z=: |. j.~/~ i:2j16
    _2j2     _1.75j2     _1.5j2     _1.25j2     _1j2     _0.75j2     _0.5j2     _0.25j2     0j2     0.25j2     0.5j2     0.75j2     1j2     1.25j2     1.5j2     1.75j2     2j2
 _2j1.75  _1.75j1.75  _1.5j1.75  _1.25j1.75  _1j1.75  _0.75j1.75  _0.5j1.75  _0.25j1.75  0j1.75  0.25j1.75  0.5j1.75  0.75j1.75  1j1.75  1.25j1.75  1.5j1.75  1.75j1.75  2j1.75
  _2j1.5   _1.75j1.5   _1.5j1.5   _1.25j1.5   _1j1.5   _0.75j1.5   _0.5j1.5   _0.25j1.5   0j1.5   0.25j1.5   0.5j1.5   0.75j1.5   1j1.5   1.25j1.5   1.5j1.5   1.75j1.5   2j1.5
 _2j1.25  _1.75j1.25  _1.5j1.25  _1.25j1.25  _1j1.25  _0.75j1.25  _0.5j1.25  _0.25j1.25  0j1.25  0.25j1.25  0.5j1.25  0.75j1.25  1j1.25  1.25j1.25  1.5j1.25  1.75j1.25  2j1.25
    _2j1     _1.75j1     _1.5j1     _1.25j1     _1j1     _0.75j1     _0.5j1     _0.25j1     0j1     0.25j1     0.5j1     0.75j1     1j1     1.25j1     1.5j1     1.75j1     2j1
 _2j0.75  _1.75j0.75  _1.5j0.75  _1.25j0.75  _1j0.75  _0.75j0.75  _0.5j0.75  _0.25j0.75  0j0.75  0.25j0.75  0.5j0.75  0.75j0.75  1j0.75  1.25j0.75  1.5j0.75  1.75j0.75  2j0.75
  _2j0.5   _1.75j0.5   _1.5j0.5   _1.25j0.5   _1j0.5   _0.75j0.5   _0.5j0.5   _0.25j0.5   0j0.5   0.25j0.5   0.5j0.5   0.75j0.5   1j0.5   1.25j0.5   1.5j0.5   1.75j0.5   2j0.5
 _2j0.25  _1.75j0.25  _1.5j0.25  _1.25j0.25  _1j0.25  _0.75j0.25  _0.5j0.25  _0.25j0.25  0j0.25  0.25j0.25  0.5j0.25  0.75j0.25  1j0.25  1.25j0.25  1.5j0.25  1.75j0.25  2j0.25
      _2       _1.75       _1.5       _1.25       _1       _0.75       _0.5       _0.25       0       0.25       0.5       0.75       1       1.25       1.5       1.75       2
_2j_0.25 _1.75j_0.25 _1.5j_0.25 _1.25j_0.25 _1j_0.25 _0.75j_0.25 _0.5j_0.25 _0.25j_0.25 0j_0.25 0.25j_0.25 0.5j_0.25 0.75j_0.25 1j_0.25 1.25j_0.25 1.5j_0.25 1.75j_0.25 2j_0.25
 _2j_0.5  _1.75j_0.5  _1.5j_0.5  _1.25j_0.5  _1j_0.5  _0.75j_0.5  _0.5j_0.5  _0.25j_0.5  0j_0.5  0.25j_0.5  0.5j_0.5  0.75j_0.5  1j_0.5  1.25j_0.5  1.5j_0.5  1.75j_0.5  2j_0.5
_2j_0.75 _1.75j_0.75 _1.5j_0.75 _1.25j_0.75 _1j_0.75 _0.75j_0.75 _0.5j_0.75 _0.25j_0.75 0j_0.75 0.25j_0.75 0.5j_0.75 0.75j_0.75 1j_0.75 1.25j_0.75 1.5j_0.75 1.75j_0.75 2j_0.75
   _2j_1    _1.75j_1    _1.5j_1    _1.25j_1    _1j_1    _0.75j_1    _0.5j_1    _0.25j_1    0j_1    0.25j_1    0.5j_1    0.75j_1    1j_1    1.25j_1    1.5j_1    1.75j_1    2j_1
_2j_1.25 _1.75j_1.25 _1.5j_1.25 _1.25j_1.25 _1j_1.25 _0.75j_1.25 _0.5j_1.25 _0.25j_1.25 0j_1.25 0.25j_1.25 0.5j_1.25 0.75j_1.25 1j_1.25 1.25j_1.25 1.5j_1.25 1.75j_1.25 2j_1.25
 _2j_1.5  _1.75j_1.5  _1.5j_1.5  _1.25j_1.5  _1j_1.5  _0.75j_1.5  _0.5j_1.5  _0.25j_1.5  0j_1.5  0.25j_1.5  0.5j_1.5  0.75j_1.5  1j_1.5  1.25j_1.5  1.5j_1.5  1.75j_1.5  2j_1.5
_2j_1.75 _1.75j_1.75 _1.5j_1.75 _1.25j_1.75 _1j_1.75 _0.75j_1.75 _0.5j_1.75 _0.25j_1.75 0j_1.75 0.25j_1.75 0.5j_1.75 0.75j_1.75 1j_1.75 1.25j_1.75 1.5j_1.75 1.75j_1.75 2j_1.75
   _2j_2    _1.75j_2    _1.5j_2    _1.25j_2    _1j_2    _0.75j_2    _0.5j_2    _0.25j_2    0j_2    0.25j_2    0.5j_2    0.75j_2    1j_2    1.25j_2    1.5j_2    1.75j_2    2j_2

── (10 of 20) Vector Field (ctd) ────────────────────────────
Displaying z in viewmat shows a radial vector field.

Note that unlike the earlier examples, viewmat attempts to
smooth out the display of a vector field.
)
   viewmat z

── (11 of 20) Vector Field (ctd) ────────────────────────────
Here is the log of z.
)
   viewmat (^. z);'Log z'

── (12 of 20) Vector Field (ctd) ────────────────────────────
More examples:
)
   viewmat (%z);'Reciprocal z'
   
   viewmat (sin z);'Sine z'

── (13 of 20) Utilities ─────────────────────────────────────
Viewmat is loaded into the jviewmat locale. This has other
utilities, including:

readmat_jviewmat_ ''  NB. reads active viewmat window

savemat_jviewmat_ ''  NB. saves active viewmat window
                      NB. argument is filename,
                      NB. default ~temp/jviewmat.png

closeall_jviewmat_ '' NB. close all viewmat windows

For example, the next section uses closeall to close any
viewmat windows.
)

── (14 of 20) RGB ───────────────────────────────────────────
A left argument for viewmat of 'rgb' means that the right
argument is interpreted as a table of RGB color integers. The
initial size is exactly that given.

For convenience, the utility viewrgb is defined as:

   'rgb' & viewmat

For example, read in a bitmap file. Each number is an RGB
color integer.
)
   a=: readpng jpath '~addons/labs/labs/examples/data/toucan.png'
   $a
144 200
   (<40;10) { a
_59100
   |.256 256 256 #: (<40;10) { a
36 25 255

── (15 of 20) RGB (ctd) ─────────────────────────────────────
Display the bitmap.

Note that you can resize this image, but the quality is only
as good as the initial data.
)
   viewrgb a

── (16 of 20) RGB (ctd) ─────────────────────────────────────
Since no scaling is done for the initial display of RGB data,
this can be helpful for displaying a bitmap accurately.

The following definitions will be used to display Hilbert's
Peano (space-filling) curve. This has a fine pattern that can
be distorted by scaling.
)
   WB=: 255,:0 0 255        NB. white/blue color triples
   WR=: 256 #. 255,:255 0 0 NB. white/red color RGB integers
   HP=: 0, 0 1 0 ,: 0       NB. initial curve
   hp=: 3 : '(|.,]) 1 (0 _2 _2 ,&.> _2 _1 0 + #y) } (,.|:) y'

── (17 of 20) RGB (ctd) ─────────────────────────────────────
Compare the normal (scaled) blue version with the unscaled
red version:
)
   WB viewmat hp ^:7 HP
   viewrgb WR {~ hp ^:7 HP

── (18 of 20) RGB (ctd) ─────────────────────────────────────
The scale definition below will scale up a bitmap
accurately.

This time the small version is unscaled, and the larger
version is accurately scaled.
)
   scale=: [ # #"1         NB. scale table y by integer x
   MG=: 256 #. 128 0 128,:0 192 0
   viewrgb MG {~ hp ^:6 HP
   viewrgb 2 scale MG {~ hp ^:6 HP

── (19 of 20) viewpng ───────────────────────────────────────
The utility viewpng will read a bitmap file and display it
using viewrgb.

For example:
)
   viewpng jpath '~addons/labs/labs/examples/data/jbox.png'

── (20 of 20) viewpng (ctd) ─────────────────────────────────
This ends the viewmat lab.

Utilities to display other image file types, such as JPEG,
can be found in the Image3 Addon.
)

End of lab
   
